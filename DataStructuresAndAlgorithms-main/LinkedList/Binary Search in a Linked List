#include <bits/stdc++.h>
using namespace std;

class Node {
public:
    int data;
    Node* next;

    Node(int value) {
        data = value;
        next = NULL;
    }
};

void print_ll(Node* head) {
    Node* temp = head;
    while (temp != NULL) {
        cout << temp->data << " ";
        temp = temp->next;
    }
}

Node* middle(Node* first, Node* last) {
    if (first == NULL) {
        return NULL;
    }
    if (first == last) {
        return first;
    }

    Node* slow = first;
    Node* fast = slow->next;

    while (fast != last) {
        fast = fast->next;
        slow = slow->next;

        if (fast != last) {
            fast = fast->next;
        }
    }
    return slow;
}

int binary_search(Node* head, int num) {
    Node* first = head;
    Node* last = NULL;

    if (head == NULL) {
        return 0;
    }

    while (first != last) {
        Node* mid = middle(first, last);

        if (mid == NULL) {
            return 0;
        }

        if (mid->data == num) {
            return 1;
        } else if (mid->data < num) {
            first = mid->next;
        } else {
            last = mid;
        }
    }
    return 0;
}

int main() {
    int n;
    cin >> n;

    Node* head = new Node(0);
    Node* temp = head;

    for (int i = 0; i < n; ++i) {
        int num;
        cin >> num;
        temp->next = new Node(num);
        temp = temp->next;
    }
    head = head->next;

    print_ll(head);
    cout << '\n';

    int num;
    cin >> num;

    int flag = binary_search(head, num);
    cout << flag << '\n';

    return 0;
}
